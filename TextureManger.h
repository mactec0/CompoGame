#pragma once
#include <SFML/Graphics.hpp>
#include <iostream>
#include <cstdlib>
#ifdef __APPLE__
#include "ResourcePath.hpp"
#endif

enum{
    OBJ_ASTRONAUT_N,
    OBJ_ASTRONAUT_E,
    OBJ_ASTRONAUT_W,
    OBJ_ASTRONAUT_S,
    
    OBJ_ASTRONAUT_NE,
    OBJ_ASTRONAUT_NW,
    OBJ_ASTRONAUT_SE,
    OBJ_ASTRONAUT_SW,
    
    OBJ_ALIEN_N,
    OBJ_ALIEN_E,
    OBJ_ALIEN_W,
    OBJ_ALIEN_S,
    OBJ_ALIEN_NE,
    OBJ_ALIEN_NW,
    OBJ_ALIEN_SE,
    OBJ_ALIEN_SW,
    
    OBJ_SPACECRAT4_N,
    OBJ_SPACECRAT4_E,
    OBJ_SPACECRAT4_W,
    OBJ_SPACECRAT4_S,
    OBJ_SPACECRAT4_NE,
    OBJ_SPACECRAT4_NW,
    OBJ_SPACECRAT4_SE,
    OBJ_SPACECRAT4_SW,
    
    
    OBJ_URANIUM_TALL_ORE_NE,
    OBJ_URANIUM_TALL_ORE_NW,
    OBJ_URANIUM_TALL_ORE_SE,
    OBJ_URANIUM_TALL_ORE_SW,
    OBJ_STONE_TALL_ORE_NE,
    OBJ_STONE_TALL_ORE_NW,
    OBJ_STONE_TALL_ORE_SE,
    OBJ_STONE_TALL_ORE_SW,
    
    
    OBJ_URANIUM_SMALL_ORE_NE,
    OBJ_URANIUM_SMALL_ORE_NW,
    OBJ_URANIUM_SMALL_ORE_SE,
    OBJ_URANIUM_SMALL_ORE_SW,
    OBJ_STONE_SMALL_ORE_NE,
    OBJ_STONE_SMALL_ORE_NW,
    OBJ_STONE_SMALL_ORE_SE,
    OBJ_STONE_SMALL_ORE_SW,
    
    
    OBJ_ICON_METAL,
    OBJ_ICON_STONE,
    OBJ_ICON_URANIUM,
    
    
    OBJ_GROUND_TILE,
    OBJ_GROUND_TILE_ROUGH1,
    OBJ_GROUND_TILE_ROUGH2,
    
    OBJ_BUILDING_OPEN_NE,
    OBJ_BUILDING_OPEN_NW,
    OBJ_BUILDING_OPEN_SE,
    OBJ_BUILDING_OPEN_SW,
    OBJ_FRAME_LOW_TILE_NE,
    OBJ_FRAME_LOW_TILE_NW,
    OBJ_FRAME_LOW_TILE_SE,
    OBJ_FRAME_LOW_TILE_SW,
    
    OBJ_FRAME_HIGH_TILE_NE,
    OBJ_FRAME_HIGH_TILE_NW,
    OBJ_FRAME_HIGH_TILE_SE,
    OBJ_FRAME_HIGH_TILE_SW,
    
    OBJ_CONSOLE_SCREEN_NE,
    OBJ_CONSOLE_SCREEN_NW,
    OBJ_CONSOLE_SCREEN_SE,
    OBJ_CONSOLE_SCREEN_SW,
    
    OBJ_SATELLITE_DISH_ANTENNA_NE,
    OBJ_SATELLITE_DISH_ANTENNA_NW,
    OBJ_SATELLITE_DISH_ANTENNA_SE,
    OBJ_SATELLITE_DISH_ANTENNA_SW,
    
    OBJ_SATELLITE_DISH_ANTENNA_LARGE_NE,
    OBJ_SATELLITE_DISH_ANTENNA_LARGE_NW,
    OBJ_SATELLITE_DISH_ANTENNA_LARGE_SE,
    OBJ_SATELLITE_DISH_ANTENNA_LARGE_SW,
    
    OBJ_BUILDING_CORRIDOR_OPEN_NE,
    OBJ_BUILDING_CORRIDOR_OPEN_NW,
    OBJ_BUILDING_CORRIDOR_OPEN_SE, 
    OBJ_BUILDING_CORRIDOR_OPEN_SW,
    
    OBJ_PIPE_CORNER_NE,
    OBJ_PIPE_CORNER_NW,
    OBJ_PIPE_CORNER_SE,
    OBJ_PIPE_CORNER_SW,
    
    OBJ_PIPE_STRAIGHT_NE,
    OBJ_PIPE_STRAIGHT_NW,
    OBJ_PIPE_STRAIGHT_SE,
    OBJ_PIPE_STRAIGHT_SW,
    
    OBJ_PIPE_SPLIT_NE,
    OBJ_PIPE_SPLIT_NW,
    OBJ_PIPE_SPLIT_SE,
    OBJ_PIPE_SPLIT_SW,
    
    OBJ_BARREL_LARGE_NE,
    OBJ_BARREL_LARGE_NW,
    OBJ_BARREL_LARGE_SE,
    OBJ_BARREL_LARGE_SW,
    
    OBJ_ALIEN_BONES_NE,
    OBJ_ALIEN_BONES_NW,
    OBJ_ALIEN_BONES_SE,
    OBJ_ALIEN_BONES_SW,
    
    OBJ_CRATER_LARGE_NE,
    OBJ_CRATER_LARGE_NW,
    OBJ_CRATER_LARGE_SE,
    OBJ_CRATER_LARGE_SW,
    OBJ_METEOR_HALF_NE,
    OBJ_METEOR_HALF_NW,
    OBJ_METEOR_HALF_SE,
    OBJ_METEOR_HALF_SW,
    
    OBJ_BUILD_ICO1,
	OBJ_BUILD_ICO2,
    OBJ_BUILD_ICO3,

    OBJ_SPACESHIP_DESTROYED,
    
    OBJ_ITEM_WEAPON_NE,
    OBJ_ITEM_WEAPON_NW,
    OBJ_ITEM_WEAPON_SE,
    OBJ_ITEM_WEAPON_SW,
     
    OBJ_BUTTON_X1,
    OBJ_BUTTON_X2,
    OBJ_BUTTON_X3,
    
    TEXTURES_MAXNUM,
};

class cTextureManger{
    sf::Texture tex[TEXTURES_MAXNUM];
public:
    cTextureManger();
    ~cTextureManger();
    
    bool LoadTexture(std::string fname, int ID);
    
    sf::Texture *GetTexture(int ID);
};

extern cTextureManger *TextureManger;
